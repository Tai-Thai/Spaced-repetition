{"version":3,"file":"background.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","extension/constances.js","background.js"],"sourcesContent":["export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","export const extensionActions = {\r\n    sendVocabListToExtension: \"SEND_VOCAB_LIST_TO_EXTENSION\",\r\n    getVocabData: \"GET_VOCAB_DATA_EXTENSION\",\r\n    updateVocabData: \"UPDATE_VOCAB_DATA_EXTENSION\",\r\n    addNewVocabInData: \"ADD_NEW_VOCAB_IN_DATA\",\r\n};\r\n","/* eslint-disable no-undef */\r\n// // import API_VOCA from \"./mylibrary/js/api\";\r\n// // import API_VOCA from \"./firebase/API_VOCA\";\r\n// import chromeExtension from \"./chromeExtension/chromeExtension\";\r\n// import API_VOCA from \"./firebase/API_VOCA\";\r\n// // import chromeExtension from \"./mylibrary/js/chromeExtension/chromeExtension\";\r\n\r\nimport { extensionActions } from \"./extension/constances\";\r\n// import { DATA } from \"./firebase/mockData\";\r\n// import { DATA } from \"./firebase/mockData\";\r\n\r\n// import { WORD_LIST_TEST_MODE } from \"./App\";\r\n\r\n// let firstAlarm = 1;\r\n// let repetitiveDataNewest;\r\n// /* eslint-disable no-undef */\r\n// chrome.alarms.onAlarm.addListener(function (alarm) {\r\n//     if (alarm.name === chromeExtension.reminder) {\r\n//         console.log(\"ALARM RUNNING...\");\r\n//         // const currentTime = new Date().getTime();\r\n\r\n//         var options = {\r\n//             type: \"basic\",\r\n//             title: \"Time to learn English vocabulary with spaced repetition!\",\r\n//             message: `Hey there! Have you forgotten any English vocabulary today? Do you remember What ${repetitiveDataNewest.voca} is? Don't miss the opportunity to improve your English skills! Start learning now!`,\r\n//             iconUrl:\r\n//                 \"https://e7.pngegg.com/pngimages/370/437/png-clipart-duolingo-flashcard-learning-spaced-repetition-language-tiny-smiley-emoticon.png\",\r\n//             silent: true,\r\n//         };\r\n//         chrome.notifications.create(options);\r\n//         // createVocaAlarm();\r\n//     }\r\n// });\r\n\r\n// async function createVocaAlarm(_repetitiveDataNewest) {\r\n//     repetitiveDataNewest = _repetitiveDataNewest;\r\n//     console.log({ repetitiveDataNewest });\r\n//     if (!repetitiveDataNewest) {\r\n//         console.log(\"HAS not REPETITIVE DATA NEWEST\");\r\n//         const dataVoca = await API_VOCA.get();\r\n//         if (dataVoca.length > 0) {\r\n//             repetitiveDataNewest = dataVoca[0];\r\n//         } else {\r\n//             return;\r\n//         }\r\n//     }\r\n//     console.log({ repetitiveDataNewest2: repetitiveDataNewest });\r\n//     // const milliseconds = getMinTimeReminder(dataVoca);\r\n//     const currentTime = new Date().getTime();\r\n//     const reminderTimeMilliseconds =\r\n//         repetitiveDataNewest.repetitiveTime - currentTime;\r\n//     const reminderTime = reminderTimeMilliseconds / 60000; // milliseconds to minutes\r\n//     if (firstAlarm > 1 && reminderTime < 0) return;\r\n//     console.log(\"CREATE ALARM: \" + reminderTime + \" minutes\");\r\n//     console.log(\"++++++ CREATED ALARM ++++++\");\r\n//     firstAlarm++;\r\n//     // console.log({ dataVoca });\r\n//     chrome.alarms.create(chromeExtension.reminder, {\r\n//         delayInMinutes: reminderTime,\r\n//         // periodInMinutes: 0.5,\r\n//     });\r\n// }\r\n\r\n// function cancelAlarm(alarmName = chromeExtension.reminder) {\r\n//     chrome.alarms.clear(alarmName);\r\n//     console.log(\"Alarm canceled.\");\r\n// }\r\n\r\n// createVocaAlarm();\r\n\r\n// chrome.runtime.onMessage.addListener(function (message, sender, sendResponse) {\r\n//     // alert(\"message received\");\r\n//     console.log(\"Listen Message External\", { message });\r\n//     if (message.vocaAlarm) {\r\n//         chrome.alarms.get(message.alarmName, (alarm) => {\r\n//             console.log({ alarm });\r\n//             if (alarm) {\r\n//                 // An alarm with the same name already exists, cancel it\r\n//                 chrome.alarms.clear(message.alarmName, function () {\r\n//                     console.log(\"Clear Alarm\");\r\n//                     // clearTimeout(timeId);\r\n\r\n//                     // Create a new alarm\r\n//                     createVocaAlarm(message.data);\r\n//                 });\r\n//             } else {\r\n//                 // No alarm exists, create a new one\r\n//                 createVocaAlarm(message.data);\r\n//             }\r\n//         });\r\n//     }\r\n// });\r\n\r\n// // ,\r\n// //     \"content_security_policy\": {\r\n// //         \"extension_pages\": \"script-src 'self' https://www.gstatic.com/ https://*.firebaseio.com https://www.googleapis.com; object-src 'self'; connect-src 'self' wss://*.firebaseio.com;\"\r\n// //     }\r\n\r\nlet data = [];\r\n\r\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\r\n    switch (request.action) {\r\n        case extensionActions.sendVocabListToExtension:\r\n            // console.log(\"sr-app: get vocab data from extension\");\r\n            data = request.data;\r\n            console.log(\"Received data - current data length: \", data.length);\r\n            // console.log(request);\r\n            sendResponse({ isSuccess: true });\r\n            break;\r\n        case extensionActions.getVocabData:\r\n            console.log(\"sr-app: get vocab data from extension\");\r\n            console.log(\"current data length: \", data.length);\r\n            // console.log(request);\r\n            sendResponse({ data: data });\r\n            break;\r\n        case extensionActions.updateVocabData:\r\n            console.log(\"sr-app: update vocab\");\r\n            const _update = request.payload;\r\n            const index =\r\n                request.indexInData && request.indexInData >= 0\r\n                    ? request.indexInData\r\n                    : data.findIndex((item) => item.id === _update.id);\r\n\r\n            // console.log({ index: index, _update, indexSended: request.index });\r\n            if (index > -1) {\r\n                data[index] = { ...data[index], ..._update };\r\n            }\r\n            // console.log(\"current data length: \", data.length);\r\n            // console.log(request);\r\n            // data = request.payload;\r\n            // sendResponse({ data: data });\r\n            break;\r\n        case extensionActions.addNewVocabInData:\r\n            console.log(\"sr-app: add new vocab\");\r\n            // console.log(request);\r\n            // data = request.payload;\r\n            data.unshift(request.payload);\r\n            console.log(\"current data length: \", data.length);\r\n            // sendResponse({ data: data });\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    // Xử lý thông điệp từ trang web ở đây\r\n    // if (request.action === ) {\r\n    //   // Xử lý và trả lời thông điệp\r\n    //   sendResponse({ data: \"Dữ liệu từ tiện ích mở rộng\" });\r\n    // }\r\n});\r\n\r\n// on active tab\r\n\r\nchrome.tabs.onActivated.addListener(function (activeInfo) {\r\n    // activeInfo chứa thông tin về tab web đang được kích hoạt\r\n    const tabId = activeInfo.tabId;\r\n    // console.log({ activeInfo });\r\n    console.log(\"active new tab\", \"sending data...\");\r\n    // Gửi tin nhắn đến tab web được kích hoạt\r\n    chrome.tabs.sendMessage(tabId, { action: \"tab_activated\", data });\r\n});\r\n\r\n//   const handleGetVocabData = () => {\r\n\r\n//   }\r\n"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_toPropertyKey","arg","key","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_defineProperty","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","extensionActions","data","chrome","runtime","onMessage","addListener","request","sender","sendResponse","action","console","log","isSuccess","_update","payload","index","indexInData","findIndex","item","id","_objectSpread","unshift","tabs","onActivated","activeInfo","tabId","sendMessage"],"sourceRoot":""}