!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(t){var r=function(t,r){if("object"!==e(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,r||"default");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"===e(r)?r:String(r)}function r(e,r,n){return(r=t(r))in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function c(e){return function(e){if(Array.isArray(e))return a(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"===typeof e)return a(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?a(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var i,l,u,s,f="SEND_VOCAB_LIST_TO_EXTENSION",d="GET_VOCAB_DATA_EXTENSION",b="UPDATE_VOCAB_DATA_EXTENSION",g="ADD_NEW_VOCAB_IN_DATA",p="GET_DATA_LENGTH_OF_EXTENSION",y=[];console.log("%CRUNNING EXTENSION BACKGROUND FILE","color: green;"),null===(i=chrome.runtime)||void 0===i||null===(l=i.onMessage)||void 0===l||l.addListener((function(e,t,r){switch(console.group("%c".concat(e.action),"color: orange"),e.action){case f:y=e.data.length>y.length?e.data:y,console.log("Received data from website - current data length: ",y.length,"request length ",e.data.length),r({isSuccess:y===e.data});break;case d:console.log("sr-app: get vocab data from extension"),console.log("current data length: ",y.length),r({data:y});break;case b:console.log("sr-app: update vocab");var n=e.payload,a=y.findIndex((function(e){return e.id===n.id}));if(e.moveToEndOfList&&a>-1){console.log("move to the end of list");var i=[].concat(c(y),[o(o({},y[a]),n)]);i.splice(a,1),y=i}else a>-1&&(y[a]=o(o({},y[a]),n));break;case g:console.log("sr-app: add new vocab"),y.unshift(e.payload),console.log("current data length: ",y.length);break;case p:console.log("sr-app: request data length"),r({dataLength:y.length})}console.groupEnd()})),null===(u=chrome.tabs)||void 0===u||null===(s=u.onActivated)||void 0===s||s.addListener((function(e){var t=e.tabId;console.log("active new tab","sending data..."),chrome.tabs.sendMessage(t,{action:"tab_activated",data:y})}))}();
//# sourceMappingURL=background.js.map