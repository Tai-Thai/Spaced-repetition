!function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e){var r=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,r||"default");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(e)}(e,"string");return"symbol"===t(r)?r:String(r)}function r(t,r,n){return(r=e(r))in t?Object.defineProperty(t,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[r]=n,t}function n(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function o(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?n(Object(o),!0).forEach((function(e){r(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function a(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function i(t){return function(t){if(Array.isArray(t))return a(t)}(t)||function(t){if("undefined"!==typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(t){if("string"===typeof t)return a(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?a(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var c,l,u,s,f="SEND_VOCAB_LIST_TO_EXTENSION",b="GET_VOCAB_DATA_EXTENSION",d="UPDATE_VOCAB_DATA_EXTENSION",p="ADD_NEW_VOCAB_IN_DATA",y="GET_DATA_LENGTH_OF_EXTENSION",g=[];null===(c=chrome.runtime)||void 0===c||null===(l=c.onMessage)||void 0===l||l.addListener((function(t,e,r){switch(console.group(t.action),t.action){case f:g=t.data.length>g.length?t.data:g,console.log("Received data from website - current data length: ",g.length),r({isSuccess:g===t.data});break;case b:console.log("sr-app: get vocab data from extension"),console.log("current data length: ",g.length),r({data:g});break;case d:console.log("sr-app: update vocab");var n=t.payload,a=g.findIndex((function(t){return t.id===n.id}));if(t.moveToEndOfList&&a>-1){console.log("move to the end of list");var c=[].concat(i(g),[o(o({},g[a]),n)]);c.splice(a,1),g=c}else a>-1&&(g[a]=o(o({},g[a]),n));break;case p:console.log("sr-app: add new vocab"),g.unshift(t.payload),console.log("current data length: ",g.length);break;case y:console.log("sr-app: request data length"),r({dataLength:g.length})}console.groupEnd()})),null===(u=chrome.tabs)||void 0===u||null===(s=u.onActivated)||void 0===s||s.addListener((function(t){var e=t.tabId;console.log("active new tab","sending data..."),chrome.tabs.sendMessage(e,{action:"tab_activated",data:g})}))}();
//# sourceMappingURL=background.js.map